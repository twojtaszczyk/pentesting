#!/usr/bin/env python

import subprocess
import optparse
import re
# from past.builtins import raw_input

# interface = raw_input("Interface: ")  # "eth0"
# new_mac = raw_input("New MAC: ")  # "08:00:27:18:6a:a7"


def get_parameters():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface",
                      help="Interface to change its MAC address")
    parser.add_option("-m", "--mac", dest="new_mac",
                      help="New MAC address")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[-] Please specify an interface, use --help for more info.")
    elif not options.new_mac:
        parser.error("[-] Please specify a new MAC address, use --help for more info.")
    return options


def change_mac(interface, new_mac):
    print("[+] Changing MAC address for " + interface + " to " + new_mac)

    # subprocess.call("ifconfig {}".format(interface), shell=True)
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])


def get_current_mac(interface):
    ifconfig_result = subprocess.check_output(["ifconfig", interface])
    # ifconfig_result = ifconfig_result.split()
    # print(ifconfig_result[ifconfig_result.index('ether') + 1])
    mac_search_result = re.search(r"((\w){2}[:.-]){5}(\w){2}", str(ifconfig_result))
    if mac_search_result:
        return mac_search_result.group(0)
    else:
        print("[-] Could not find MAC address.")


parameters = get_parameters()
print("[+] MAC address before change: " + str(get_current_mac(parameters.interface)))
change_mac(interface=parameters.interface, new_mac=parameters.new_mac)
current_mac = get_current_mac(parameters.interface)
if current_mac == parameters.new_mac:
    print("[+] MAC address was successfully changed to " + current_mac)
else:
    print("[-] MAC address did not get changed.")
