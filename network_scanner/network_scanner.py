#!/usr/bin/env python

import scapy.all as scapy
import argparse


def get_parameters():
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", dest="ip_range",
                      help="IP range for searching")
    options = parser.parse_args()
    if not options.ip_range:
        parser.error("[-] Please specify a IP range, use --help for more info.")
    return options


def scan(ip):
    # scapy.arping(ip)
    # scapy.ls(scapy.ARP())
    arp_req = scapy.ARP(pdst=ip)
    # scapy.ls(scapy.Ether())
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    # print(arp_req.summary())
    # print(broadcast.summary())
    arp_req_broadcast = broadcast / arp_req
    # print(arp_req_broadcast.summary())
    # arp_req_broadcast.show()
    # answered, unanswered = scapy.srp(arp_req_broadcast, timeout=1)
    answered = scapy.srp(arp_req_broadcast, timeout=1, verbose=False)[0]
    clients = []
    for element in answered:
        client = {"ip": element[1].psrc, "mac": element[1].hwsrc}
        clients.append(client)
    return clients


def print_clients(clients):
    print("IP\t\t\t\tMAC Address")
    print("-----------------------------------")
    for client in clients:
        print(client["ip"] + "\t\t" + client["mac"])


parameters = get_parameters()
clients_list = scan(parameters.ip_range)
print_clients(clients_list)
